.include "asm/macros.inc"
.include "constants/constants.inc"
.text
.syntax unified


	arm_func_start _start
_start: @ 0x08000000
	b _init
_08000004:
	.byte 0x24, 0xFF, 0xAE, 0x51, 0x69, 0x9A, 0xA2, 0x21, 0x3D, 0x84, 0x82, 0x0A
	.byte 0x84, 0xE4, 0x09, 0xAD, 0x11, 0x24, 0x8B, 0x98, 0xC0, 0x81, 0x7F, 0x21, 0xA3, 0x52, 0xBE, 0x19
	.byte 0x93, 0x09, 0xCE, 0x20, 0x10, 0x46, 0x4A, 0x4A, 0xF8, 0x27, 0x31, 0xEC, 0x58, 0xC7, 0xE8, 0x33
	.byte 0x82, 0xE3, 0xCE, 0xBF, 0x85, 0xF4, 0xDF, 0x94, 0xCE, 0x4B, 0x09, 0xC1, 0x94, 0x56, 0x8A, 0xC0
	.byte 0x13, 0x72, 0xA7, 0xFC, 0x9F, 0x84, 0x4D, 0x73, 0xA3, 0xCA, 0x9A, 0x61, 0x58, 0x97, 0xA3, 0x27
	.byte 0xFC, 0x03, 0x98, 0x76, 0x23, 0x1D, 0xC7, 0x61, 0x03, 0x04, 0xAE, 0x56, 0xBF, 0x38, 0x84, 0x00
	.byte 0x40, 0xA7, 0x0E, 0xFD, 0xFF, 0x52, 0xFE, 0x03, 0x6F, 0x95, 0x30, 0xF1, 0x97, 0xFB, 0xC0, 0x85
	.byte 0x60, 0xD6, 0x80, 0x25, 0xA9, 0x63, 0xBE, 0x03, 0x01, 0x4E, 0x38, 0xE2, 0xF9, 0xA2, 0x34, 0xFF
	.byte 0xBB, 0x3E, 0x03, 0x44, 0x78, 0x00, 0x90, 0xCB, 0x88, 0x11, 0x3A, 0x94, 0x65, 0xC0, 0x7C, 0x63
	.byte 0x87, 0xF0, 0x3C, 0xAF, 0xD6, 0x25, 0xE4, 0x8B, 0x38, 0x0A, 0xAC, 0x72, 0x21, 0xD4, 0xF8, 0x07
	.byte 0x50, 0x4F, 0x4B, 0x45, 0x4D, 0x4F, 0x4E, 0x20, 0x45, 0x4D, 0x45, 0x52, 0x42, 0x50, 0x45, 0x4A
	.byte 0x30, 0x31, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
	.byte 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x6F, 0x6B, 0x65, 0x6D, 0x6F, 0x6E, 0x20
	.byte 0x65, 0x6D, 0x65, 0x72, 0x61, 0x6C, 0x64, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0xDA, 0x2D, 0x08, 0x48, 0x61, 0x2D, 0x08
	.byte 0x08, 0x6F, 0x2D, 0x08, 0xC8, 0x7C, 0x2D, 0x08, 0x04, 0x68, 0x55, 0x08, 0xE4, 0x6E, 0x55, 0x08
	.byte 0x9C, 0x70, 0x55, 0x08, 0x1C, 0xA3, 0x2E, 0x08, 0xC4, 0xAC, 0x2E, 0x08, 0xD0, 0x0C, 0x58, 0x08
	.byte 0x70, 0x12, 0x00, 0x00, 0x9C, 0x13, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0x09, 0x00, 0x00
	.byte 0x24, 0x3B, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0xE4, 0x08, 0x00, 0x00, 0xAC, 0x08, 0x00, 0x00
	.byte 0x82, 0x01, 0x00, 0x00, 0x07, 0x05, 0x0A, 0x05, 0x07, 0x08, 0x06, 0x07, 0x04, 0x0A, 0x12, 0x0A
	.byte 0x0A, 0x05, 0x01, 0x08, 0x07, 0x00, 0x00, 0x00, 0x2C, 0x0F, 0x00, 0x00, 0x88, 0x3D, 0x00, 0x00
	.byte 0x34, 0x02, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00
	.byte 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xA8, 0x0C, 0x00, 0x00, 0xA8, 0x0C, 0x00, 0x00
	.byte 0xC7, 0x31, 0x00, 0x00, 0xB3, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x0D, 0x2F, 0x08
	.byte 0xC4, 0xBD, 0x2E, 0x08, 0x34, 0xC0, 0x2E, 0x08, 0xE8, 0xCE, 0x55, 0x08, 0x20, 0xD2, 0x2E, 0x08
	.byte 0x0C, 0xCE, 0x2F, 0x08, 0x6C, 0xCE, 0x2F, 0x08, 0xA8, 0x00, 0x00, 0x00, 0x64, 0x08, 0x00, 0x00
	.byte 0x9B, 0x08, 0x00, 0x00, 0x1E, 0x1E, 0x10, 0x40, 0x2E, 0x32, 0x00, 0x00, 0x98, 0x04, 0x00, 0x00
	.byte 0xA8, 0x31, 0x00, 0x00, 0xF8, 0x31, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	.byte 0xFF, 0xFF, 0xFF, 0xFF
_init:
	mov r0, #0x12
	msr cpsr_fc, r0
	ldr sp, _0800023C
	mov r0, #0x1f
	msr cpsr_fc, r0
	ldr sp, _08000238
	ldr r1, _08000240
	add r0, pc, #0x20
	str r0, [r1]
	ldr r1, _08000244
	mov lr, pc
	bx r1
	arm_func_end _start

	arm_func_start _init.ret
_init.ret: @ 0x08000234
	b _init
	.align 2, 0
_08000238: .4byte 0x03007E40
_0800023C: .4byte 0x03007FA0
_08000240: .4byte 0x03007FFC
_08000244: .4byte 0x080003A5
	arm_func_end _init.ret

	arm_func_start _intr
_intr: @ 0x08000248
	mov r3, #0x4000000
	add r3, r3, #0x200
	ldr r2, [r3]
	ldrh r1, [r3, #8]
	mrs r0, spsr
	push {r0, r1, r2, r3, lr}
	mov r0, #0
	strh r0, [r3, #8]
	and r1, r2, r2, lsr #16
	mov ip, #0
	ands r0, r1, #4
	bne _08000320
	add ip, ip, #4
	mov r0, #1
	strh r0, [r3, #8]
	ands r0, r1, #0x80
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x40
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #2
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #1
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #8
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x10
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x20
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x100
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x200
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x400
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x800
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x1000
	bne _08000320
	add ip, ip, #4
	ands r0, r1, #0x2000
	strbne r0, [r3, #-0x17c]
_0800031C:
	bne _0800031C
_08000320:
	strh r0, [r3, #2]
	bic r2, r2, r0
	ldr r0, _0800039C
	ldr r0, [r0]
	ldrb r0, [r0, #0xa]
	mov r1, #8
	lsl r0, r1, r0
	orr r0, r0, #0x2000
	orr r1, r0, #0xc6
	and r1, r1, r2
	strh r1, [r3]
	mrs r3, cpsr
	bic r3, r3, #0xdf
	orr r3, r3, #0x1f
	msr cpsr_fc, r3
	ldr r1, _080003A0
	add r1, r1, ip
	ldr r0, [r1]
	stmdb sp!, {lr}
	add lr, pc, #0
	bx r0
	arm_func_end _intr

	arm_func_start _intr.ret
_intr.ret: @ 0x08000374
	ldm sp!, {lr}
	mrs r3, cpsr
	bic r3, r3, #0xdf
	orr r3, r3, #0x92
	msr cpsr_fc, r3
	pop {r0, r1, r2, r3, lr}
	strh r2, [r3]
	strh r1, [r3, #8]
	msr spsr_fc, r0
	bx lr
	.align 2, 0
_0800039C: .4byte 0x03007608
_080003A0: .4byte 0x030027B0
	arm_func_end _intr.ret

